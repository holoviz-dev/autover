language: python

# TODO: add appropriate guards (e.g. only deploy on tag matching
# certain pattern) once auto packaging is figured out.

stages:
  - test
  - name: conda_package
#    if: (branch = master AND type != pull_request) OR (tag IS present)
  - name: pypi_package
    if: tag IS present

jobs:
  fast_finish: true
  include:
    - &tests
      stage: test
      python: 3.6
      env: TOX_ENV=py36
      install:
        - pip install tox
      script:
        ### (1) verify installed python package
        - GIT_VERSION=$(git describe --long) tox -e $TOX_ENV
        ### (2) verify in this git checkout
        - git reset --hard
        - PYTHONPATH=. ./scripts/tmpverify
        ### (3) verify develop install
        - git reset --hard
        - export GIT_VERSION=$(git describe --long)
        - pip install -e .
        - mkdir $HOME/tmp123
        - cd $HOME/tmp123
        - tmpverify

    - stage: conda_package
      install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda config --set always_yes yes --set changeps1 no
        - conda update conda
        - conda install conda-build anaconda-client
      script:
        - conda build conda.recipe
      after_success:
        - export LABEL="--label dev" && [[ ! -z "$TRAVIS_TAG" ]] && LABEL=""
#        - anaconda --token $CONDA_UPLOAD_TOKEN upload --user cball ${LABEL} $(conda build --output conda.recipe)

    - <<: *tests
      stage: pypi_package
      install: true
      script: true
      deploy:
        provider: pypi
        # could instead use real pypi when tag is release style
        server: https://test.pypi.org/legacy/
        distributions: "sdist bdist_wheel"
        user: ${PYPI_USERNAME}
        password: ${PYPI_PASSWORD}
        skip_cleanup: true
